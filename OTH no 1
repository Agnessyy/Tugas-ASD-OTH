#include <stdio.h>

typedef struct Node { // Mendefinisikan tipe data struct 'Node'
  struct Node* link; // Pointer yang menunjukkan ke node berikutnya dalam linked list
  char* alphabet; // Pointer ke karakter atau string kedalam node
} Node;

int main() {
  // Deklarasi node-node
  Node l1, l2, l3, l4, l5, l6, l7, l8, l9;

  // Inisialisasi huruf pada masing-masing node
  l1.link = NULL;
  l1.alphabet = "F";

  l2.link = NULL;
  l2.alphabet = "M";

  l3.link = NULL;
  l3.alphabet = "A";

  l4.link = NULL;
  l4.alphabet = "I";

  l5.link = NULL;
  l5.alphabet = "K";

  l6.link = NULL;
  l6.alphabet = "T";

  l7.link = NULL;
  l7.alphabet = "N";

  l8.link = NULL;
  l8.alphabet = "O";
  
  l9.link = NULL;
  l9.alphabet = "R";

// Menghubungkan node sesuai dengan urutan yang diinginkan 
  l7.link = &l1;
  l1.link = &l8;
  l8.link = &l2;
  l2.link = &l5;
  l5.link = &l3;
  l3.link = &l6;
  l6.link = &l9;
  l9.link = &l4;
  l4.link = &l7;

//Akses data menggunakan 'printf'
  printf("%s", l3.link->link->link->alphabet); // Print huruf 'I'
  printf("%s", l3.link->link->link->link->alphabet); // Print huruf 'N'
  printf("%s", l3.link->link->link->link->link->alphabet); // Print huruf 'F'
  printf("%s", l3.link->link->link->link->link->link->alphabet); // Print huruf 'O'
  printf("%s", l3.link->link->alphabet); // Print huruf 'R'
  printf("%s", l3.link->link->link->link->link->link->link->alphabet); // Print huruf 'M'
  printf("%s", l3.alphabet); // Print huruf 'A'
  printf("%s", l3.link->alphabet); // Print huruf 'T' 
  printf("%s", l3.link->link->link->alphabet); // Print huruf 'I'
  printf("%s", l3.link->link->link->link->link->link->link->link->alphabet); // Print huruf 'K'
  printf("%s", l3.alphabet); // Print huruf 'A'

  return 0; // Mengembalikan nilai 0 unutk menunjukkan bahwa program telah dijalankan 
}
